---

- name: Check if nextcloud service is running
  shell: docker service ls | awk '{print $2}' | grep nextcloud
  changed_when: nextcloud_status.rc == 1
  ignore_errors: true
  failed_when: nextcloud_status.rc == 2
  register: nextcloud_status

- name: Create nextcloud volume root directory
  hosts: nfs-server[0]
  become: "yes"
  file:
    path: /srv/nfs/nextcloud
    state: directory
    mode: 0777
  any_errors_fatal: true
  when: nextcloud_status.rc == 1

- name: Create nextcloud volume html directory
  hosts: nfs-server[0]
  become: "yes"
  file:
    path: /srv/nfs/nextcloud/html
    state: directory
    mode: 0777
  any_errors_fatal: true
  when: nextcloud_status.rc == 1

- name: Create nextcloud volume data directory
  hosts: nfs-server[0]
  become: "yes"
  file:
    path: /srv/nfs/nextcloud/config
    state: directory
    mode: 0777
  any_errors_fatal: true
  when: nextcloud_status.rc == 1

- name: Create nextcloud volume data directory
  hosts: nfs-server[0]
  become: "yes"
  file:
    path: /srv/nfs/nextcloud/data
    state: directory
    mode: 0777
  any_errors_fatal: true
  when: nextcloud_status.rc == 1

- name: Create nextcloud volume data directory
  hosts: nfs-server[0]
  become: "yes"
  file:
    path: /srv/nfs/nextcloud/custom_apps
    state: directory
    mode: 0777
  any_errors_fatal: true
  when: nextcloud_status.rc == 1

- name: Retrieve password from vault
  connection: local
  hashivault_read:
    secret: 'database/postgres/password'
    key: 'value'
  register: postgres_password
  when: nextcloud_status.rc == 1

- name: Set fact to carry database secret
  connection: local
  set_fact:
    postgres_password: "{{lookup('hashivault', 'database/postgres/password', 'value')}}"
  when: nextcloud_status.rc == 1

- name: Create nextcloud db user
  connection: local
  postgresql_user:
    login_host: postgres
    login_password: '{{postgres_password}}'
    user: nextcloud
    password: nextadmin
    encrypted: "yes"
    state: present
  when: nextcloud_status.rc == 1

- name: Setup nextcloud database on db server
  connection: local
  postgresql_db:
    login_host: postgres
    login_password: '{{postgres_password}}'
    name: nextcloud
    owner: nextcloud
    state: present
  when: nextcloud_status.rc == 1

- name: Deploy nextcloud service
  hosts: docker-manager[0]
  command: |
    docker service create -d --name nextcloud \
    --network mangonet \
    --label traefik.port=80 \
    --mount 'type=volume,"volume-opt=o=addr=grid011.sysmango.net,vers=4.1",volume-opt=device=:/srv/nfs/nextcloud/html,volume-opt=type=nfs,target=/var/www/html' \
    --mount 'type=volume,"volume-opt=o=addr=grid011.sysmango.net,vers=4.1",volume-opt=device=:/srv/nfs/nextcloud/config,volume-opt=type=nfs,target=/var/www/html/config' \
    --mount 'type=volume,"volume-opt=o=addr=grid011.sysmango.net,vers=4.1",volume-opt=device=:/srv/nfs/nextcloud/data,volume-opt=type=nfs,target=/var/www/html/data' \
    --mount 'type=volume,"volume-opt=o=addr=grid011.sysmango.net,vers=4.1",volume-opt=device=:/srv/nfs/nextcloud/custom_apps,volume-opt=type=nfs,target=/var/www/custom_apps' \
    --replicas 1 \
    -e POSTGRES_DB={{nextcloud_database}} \
    -e POSTGRES_USER={{nextcloud_db_user}} \
    -e POSTGRES_PASSWORD={{nextcloud_db_passwd}} \
    -e POSTGRES_HOST{{nextcould_db_connection}} \
    -e NEXTCLOUD_ADMIN_USER={{nextcloud_admin_user}} \
    -e NEXTCLOUD_ADMIN_PASSWORD={{nextcloud_admin_passwd}} \
    {{nextcloud_docker_image}}:{{nextcloud_docker_image_tag}}
  run_once: true
  when: nextcloud_status.rc == 1
